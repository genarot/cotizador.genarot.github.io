{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","components/Formulario/Option.js","components/Formulario/Formulario.js","components/Formulario/index.js","helpers.js","components/Resumen/Resumen.js","components/Resumen/index.js","components/Resultado/index.js","components/Resultado/Resultado.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","Option","value","disabled","text","Formulario","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","sendForm","bind","assertThisInitialized","evt","preventDefault","infoAuto","marca","current","year","plan","checked","console","log","cotizarSeguro","currentTarget","reset","state","onSubmit","name","ref","Formulario_Option","key","marcas","map","index","type","defaultChecked","Component","defaultProps","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","datos","Resultado","resultado","mensaje","react_transition_group","classNames","timeout","App","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","obtenerPlan","setState","selection","_this2","setTimeout","components_Resumen","components_Header","components_Formulario","renderResultado","components_Resultado","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kRAEeA,ECAA,SAAUC,GACrB,OAAQC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OACdH,EAAAC,EAAAC,cAAA,UACKH,EAAMK,wBCGZC,EANA,SAASN,GACpB,MAAoB,KAAfA,EAAMO,MACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAOP,EAAMO,MAAOC,UAAQ,GAAER,EAAMS,MAChDR,EAAAC,EAAAC,cAAA,UAAQI,MAAOP,EAAMO,OAASP,EAAMS,OCA1BC,cACjB,SAAAA,EAAYV,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMd,KAMVkB,SAAcC,IAAMC,YAPDT,EAQnBU,QAAcF,IAAMC,YARDT,EASnBW,cAAkBH,IAAMC,YATLT,EAUnBY,gBAAkBJ,IAAMC,YANpBT,EAAKa,SAAWb,EAAKa,SAASC,KAAdb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAJDA,wEAoBTgB,GACNA,EAAIC,iBAMJ,IAAMC,EAAW,CACbC,MAAQhB,KAAKI,SAASa,QAAQxB,MAC9ByB,KAAQlB,KAAKO,QAAQU,QAAQxB,MAC7B0B,KAAQnB,KAAKQ,cAAcS,QAAQG,QAAU,SAAW,YAG5DC,QAAQC,IAAI,WACZD,QAAQC,IAAItB,KAAKI,SAASa,QAAQxB,OAGlCO,KAAKd,MAAMqC,cAAeR,GAC1BM,QAAQC,IAAIT,EAAIW,eAEhBX,EAAIW,cAAcC,oDAIlBJ,QAAQC,IAAI,wDAMZ,OAFAD,QAAQC,IAAItB,KAAK0B,OAGbvC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeqC,SAAU3B,KAAKU,UAC1CvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,QAASC,IAAK7B,KAAKI,UAC5BjB,EAAAC,EAAAC,cAACyC,EAAD,CAAQC,KAAM,EAAGtC,MAAO,GAAIC,UAAQ,EAACC,KAAM,yBAEvCK,KAAKd,MAAM8C,OAAOC,IAAK,SAACjB,EAAOkB,GAAR,OAAkB/C,EAAAC,EAAAC,cAACyC,EAAD,CAAQC,IAAKG,EAAOzC,MAAOuB,EAAOrB,KAAMqB,QAK7F7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,OAAOC,IAAK7B,KAAKO,SAC1BpB,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,QACAN,EAAAC,EAAAC,cAAA,UAAQI,MAAM,QAAd,UAGRN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAO8C,KAAK,QAAQP,KAAK,OAAOQ,gBAAc,EAACP,IAAK7B,KAAKQ,cAAef,MAAM,WAFlF,aAGIN,EAAAC,EAAAC,cAAA,SAAO8C,KAAK,QAAQP,KAAK,OAAOC,IAAK7B,KAAKS,gBAAiBhB,MAAM,aAHrE,aAMAN,EAAAC,EAAAC,cAAA,UAAQ8C,KAAK,SAAS7C,UAAU,SAAhC,mBArFwB+C,aAAnBzC,EAiBV0C,aAAe,CAClBN,OAAQ,ICrBDpC,QCwBP,SAAS2C,EAAiBC,GAC7B,OAAOA,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,GCxBxD,ICDeC,EDCC,SAAS1D,GACrB,OAAQC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,mBAAWkD,EAAiBrD,EAAM2D,MAAM7B,QACxC7B,EAAAC,EAAAC,cAAA,kBAAUkD,EAAiBrD,EAAM2D,MAAM1B,OACvChC,EAAAC,EAAAC,cAAA,kBAAUH,EAAM2D,MAAM3B,gBEN3B4B,0LCKP,IAAIC,EAAY/C,KAAKd,MAAM6D,UACvBC,EAAYD,EAA2C,IAAIA,EAAlC,+BAC7B,OACI5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC4D,EAAA,gBAAD,CACA3D,UAAU,QAENH,EAAAC,EAAAC,cAAC4D,EAAA,cAAD,CACIC,WAAW,OACXC,QAAS,MAEThE,EAAAC,EAAAC,cAAA,YAAO2D,aAfPX,cCGjBL,EAAS,CAAC,YAAY,UAAU,YCLxBoB,cDQb,SAAAA,EAAYlE,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACjBvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,KAAMd,KAURqC,cAAgB,SAAEsB,GAChBxB,QAAQC,IAAIuB,GADe,IAEtB3B,EAAqB2B,EAArB3B,KAAMF,EAAe6B,EAAf7B,MAAOG,EAAQ0B,EAAR1B,KAEd4B,EAAY,IAKhBA,GAA6B,EL9B1B,SAA+B7B,GAClC,OAAO,IAAImC,MAAOC,cAAgBpC,EK0BfqC,CAAuBrC,GAGR6B,EAAW,IAE7CA,EL5BI,SAAwBS,GAC3B,IAAIC,EAEJ,OAAQD,GACJ,IAAK,UACDC,EAAa,IACb,MACJ,IAAK,YACDA,EAAa,KACb,MACJ,IAAK,WACDA,EAAa,KAMrB,OAAOA,EKWIC,CAAe1C,GAAS+B,EAIpCA,GLbI,SAAsB5B,GACzB,MAAiB,WAATA,EAAqB,IAAO,IKUhBwC,CAAaxC,GAIlCE,QAAQC,IAAIyB,GACZlD,EAAK+D,SAAS,CACZb,UAAWA,EACXF,MAAOA,KA5BThD,EAAK6B,MAAQ,CACXM,OAAQ,GACR6B,WAAY,EACZd,UAAW,GACXF,MAAO,IAPQhD,mFAkCC,IAAAiE,EAAA9D,KAClB+D,WAAW,WACPD,EAAKF,SAAS,CAAC5B,OAAQA,KAE3B,gDAIE,MAA8B,KAAzBhC,KAAK0B,MAAMqB,UACP5D,EAAAC,EAAAC,cAAC2E,EAAD,CAASnB,MAAO7C,KAAK0B,MAAMmB,MAAOE,UAAW/C,KAAK0B,MAAMqB,YAE1D,sCAGT,OACE5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC4E,EAAD,CAAQ1E,MAAO,gCACfJ,EAAAC,EAAAC,cAAA,OAAKC,UAAW,yBACdH,EAAAC,EAAAC,cAAC6E,EAAD,CAAYlC,OAAQhC,KAAK0B,MAAMM,OAAQT,cAAevB,KAAKuB,cAAesC,UAAY7D,KAAK0B,MAAMmC,YAChG7D,KAAKmE,kBACNhF,EAAAC,EAAAC,cAAC+E,EAAD,CAAWrB,UAAW/C,KAAK0B,MAAMqB,qBAvD3BV,aEGEgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4eb3c78f.chunk.js","sourcesContent":["import Header from \"./Header\";\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Header = function( props ){\r\n    return (<header className=\"top\">\r\n                <h1>\r\n                    {props.title}\r\n                </h1>\r\n            </header>)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Option = function(props){\r\n    if ( props.value=== '')\r\n        return <option value={props.value} disabled>{props.text}</option>\r\n    return <option value={props.value} >{props.text}</option>\r\n}\r\n\r\nexport default Option;","import React,{Component} from 'react';\r\nimport Option from './Option.js';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Formulario extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Binds\r\n        this.sendForm = this.sendForm.bind(this);\r\n    }\r\n    //los refs se utilizan para leer los valores de los campos de un formulario\r\n    marcaRef    = React.createRef();\r\n    yearRef     = React.createRef();\r\n    planBasicoRef   = React.createRef();\r\n    planCompletoRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        // title: PropTypes.string.isRequired,\r\n        marcas: PropTypes.arrayOf(PropTypes.string)\r\n    }\r\n    static defaultProps = {\r\n        marcas: []\r\n    }\r\n\r\n    sendForm( evt ) {\r\n        evt.preventDefault();\r\n        \r\n        //Obtener los daros\r\n\r\n\r\n        //crear el objeto\r\n        const infoAuto = {\r\n            marca:  this.marcaRef.current.value,\r\n            year:   this.yearRef.current.value,\r\n            plan:   this.planBasicoRef.current.checked ? 'basico' : 'completo'\r\n        }\r\n        //enviarlo al componente principal\r\n        console.log('Enviado');\r\n        console.log(this.marcaRef.current.value);\r\n        \r\n        //enviarlo al componente principal\r\n        this.props.cotizarSeguro( infoAuto );\r\n        console.log(evt.currentTarget);\r\n        \r\n        evt.currentTarget.reset();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Cargo el componente');\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        \r\n        return (\r\n            <form className=\"cotizar-auto\" onSubmit={this.sendForm}>\r\n                <div className=\"campo\">\r\n                    <label>Marca</label>\r\n                    <select name=\"marca\"  ref={this.marcaRef}>\r\n                        <Option key={-1} value={''} disabled text={'Selecciona una marca'}/>\r\n                        {\r\n                            this.props.marcas.map( (marca, index) => <Option key={index} value={marca} text={marca}/>)\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Año</label>\r\n                    <select name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label>Plan:</label>\r\n                    <input type=\"radio\" name=\"plan\" defaultChecked ref={this.planBasicoRef} value=\"basico\"/> Básico\r\n                    <input type=\"radio\" name=\"plan\" ref={this.planCompletoRef} value=\"completo\"/> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n            </form>\r\n        );\r\n    }\r\n}","import Formulario from \"./Formulario\";\r\n\r\nexport default Formulario;","export function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n }\r\n \r\n export function calcularMarca( modelo ) {\r\n     let incremento;\r\n \r\n     switch (modelo) {\r\n         case 'europeo':\r\n             incremento = 1.30;\r\n             break;\r\n         case 'americano':\r\n             incremento = 1.15;\r\n             break;\r\n         case 'asiatico':\r\n             incremento = 1.05;\r\n             break;\r\n         default:\r\n             break;\r\n     }\r\n \r\n     return incremento;\r\n }\r\n export function obtenerPlan( plan ) {\r\n     return (plan === 'basico') ? 1.20 : 1.50;\r\n }\r\n export function primeraMayuscula(texto) {\r\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n }","import {primeraMayuscula} from '../../helpers'\r\nimport React from 'react'\r\n\r\nconst Resumen = function(props) {\r\n    return  <div className=\"resumen\">\r\n                <ul>\r\n                    <h2>Resumen de la cotizaciion:</h2>\r\n                    <li>Marca:{primeraMayuscula(props.datos.marca)}</li>\r\n                    <li>Plan:{primeraMayuscula(props.datos.plan)}</li>\r\n                    <li>anio:{props.datos.year}</li>\r\n                </ul>\r\n            </div>\r\n}\r\n\r\nexport default Resumen;","import Resumen from \"./Resumen\";\r\n\r\nexport default Resumen;","import Resultado from \"./Resultado\";\r\n\r\n\r\nexport default Resultado;","import React,{Component} from 'react';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\nimport './Resultado.css';\r\n//react-transition-group\r\nclass Resultado extends Component {\r\n\r\n    render() {\r\n\r\n        let resultado = this.props.resultado;\r\n        let mensaje = (!resultado) ? 'Elige Marcar, año, y Plan' : '$'+resultado;\r\n        return (\r\n            <div className=\"gran-total\">\r\n                <TransitionGroup\r\n                className=\"fade\">\r\n\r\n                    <CSSTransition\r\n                        classNames=\"fade\"\r\n                        timeout={1500}\r\n                        >\r\n                        <span>{mensaje}</span>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Resultado;","import React, { Component } from 'react';\nimport Header from '../Header';\nimport './App.css';\nimport Formulario from '../Formulario/';\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../../helpers';\nimport Resumen from '../Resumen';\nimport Resultado from '../Resultado';\nconst  marcas = ['americano','europeo','asiatico'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      marcas: [],\n      selection: -1,\n      resultado: '',\n      datos: {}\n    }\n  }\n\n  cotizarSeguro = ( datos ) => {\n    console.log(datos);\n    let {year, marca, plan} = datos;\n\n    let resultado = 2000;\n    \n    const diferencia = obtenerDiferenciaAnio( year );\n\n    //r\n    resultado  -= ((diferencia * 3) * resultado)/100;\n\n    resultado = calcularMarca( marca) * resultado;\n\n    let incrementoPlan = obtenerPlan( plan );\n\n    resultado *= incrementoPlan;\n\n    console.log(resultado);\n    this.setState({\n      resultado: resultado,\n      datos: datos\n    })\n  }\n  componentDidMount() {\n    setTimeout(() => {\n        this.setState({marcas: marcas })\n    },\n    1500)\n  }\n\n  renderResultado() {\n      if ( this.state.resultado !== '' ) {\n        return <Resumen datos={this.state.datos} resultado={this.state.resultado}/>\n      }\n      return null;\n  }\n  render() {\n    return (\n      <div className=\"contenedor\">\n          <Header title={'Cotizador de Seguro de Auto'}/>\n          <div className={'contenedor-formulario'}>\n            <Formulario marcas={this.state.marcas} cotizarSeguro={this.cotizarSeguro} selection={ this.state.selection }/>\n            {this.renderResultado()}\n            <Resultado resultado={this.state.resultado} />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import App from \"./App\";\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}